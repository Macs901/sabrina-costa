// Script para aplicar schema no Supabase
// Dashboard Sabrina Costa

const { Client } = require('pg');
const fs = require('fs');
const path = require('path');

// Configura√ß√£o do banco
const client = new Client({
    connectionString: 'postgresql://postgres:KGpLvZ4erc3MMYJn@db.ddadyebnnbwqrjjtvgca.supabase.co:5432/postgres'
});

async function applySchema() {
    try {
        console.log('üîå Conectando ao Supabase...');
        await client.connect();
        console.log('‚úÖ Conectado!');

        console.log('üìñ Lendo schema SQL...');
        const schemaPath = path.join(__dirname, 'backend', 'db', 'schema.sql');
        const schemaSQL = fs.readFileSync(schemaPath, 'utf8');
        
        console.log('üöÄ Aplicando schema...');
        await client.query(schemaSQL);
        console.log('‚úÖ Schema aplicado com sucesso!');

        // Inserir usu√°rio admin
        console.log('üë§ Criando usu√°rio admin...');
        const bcrypt = require('bcryptjs');
        const hashedPassword = bcrypt.hashSync('Sabrina2025!', 10);
        
        await client.query(`
            INSERT INTO users (email, password_hash, name, role) 
            VALUES ($1, $2, $3, $4) 
            ON CONFLICT (email) DO NOTHING
        `, ['gerente@macspark.dev', hashedPassword, 'Marco', 'admin']);
        
        console.log('‚úÖ Usu√°rio admin criado!');

        // Inserir dados iniciais
        console.log('üìä Inserindo dados iniciais...');
        
        // Inserir ganchos virais
        const hooks = [
            { category: 'Curiosidade', text: 'O que NINGU√âM te conta sobre [tema]...' },
            { category: 'Urg√™ncia', text: 'PARE de fazer isso AGORA' },
            { category: 'Transforma√ß√£o', text: 'Como eu fui de [antes] para [depois]' },
            { category: 'Identifica√ß√£o', text: 'Se voc√™ tamb√©m √© assim, me segue' },
            { category: 'Lista', text: '3 coisas que NINGU√âM te conta' }
        ];

        for (const hook of hooks) {
            await client.query(`
                INSERT INTO hooks (category, text, usage_count) 
                VALUES ($1, $2, $3) 
                ON CONFLICT DO NOTHING
            `, [hook.category, hook.text, 0]);
        }

        console.log('‚úÖ Dados iniciais inseridos!');
        console.log('üéâ Setup completo!');

    } catch (error) {
        console.error('‚ùå Erro:', error.message);
    } finally {
        await client.end();
        console.log('üîå Conex√£o encerrada.');
    }
}

applySchema();
